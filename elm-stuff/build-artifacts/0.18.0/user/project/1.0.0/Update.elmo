var _user$project$Update$maybeMakeMove = function (m) {
	var _p0 = m.state;
	if (_p0.ctor === 'Playing') {
		return _user$project$Model$makeMove(m);
	} else {
		return m;
	}
};
var _user$project$Update$maybeChangeDir = F3(
	function (m, n, d) {
		var _p1 = m.state;
		if (_p1.ctor === 'Playing') {
			return A3(_user$project$Model$changeDir, m, n, d);
		} else {
			return m;
		}
	});
var _user$project$Update$vscpu = F2(
	function (g, m) {
		return g.cpu ? m : g;
	});
var _user$project$Update$vshuman = F2(
	function (g, m) {
		return (!g.cpu) ? m : g;
	});
var _user$project$Update$inGameAction = F2(
	function (msg, g) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'Tick':
				return {
					ctor: '_Tuple2',
					_0: _user$project$Update$maybeMakeMove(g),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'KeyMsg':
				var _p3 = _p2._0;
				switch (_p3) {
					case 40:
						return {
							ctor: '_Tuple2',
							_0: A3(
								_user$project$Update$maybeChangeDir,
								g,
								1,
								{ctor: '_Tuple2', _0: 1, _1: 0}),
							_1: _elm_lang$core$Platform_Cmd$none
						};
					case 37:
						return {
							ctor: '_Tuple2',
							_0: A3(
								_user$project$Update$maybeChangeDir,
								g,
								1,
								{ctor: '_Tuple2', _0: 0, _1: -1}),
							_1: _elm_lang$core$Platform_Cmd$none
						};
					case 39:
						return {
							ctor: '_Tuple2',
							_0: A3(
								_user$project$Update$maybeChangeDir,
								g,
								1,
								{ctor: '_Tuple2', _0: 0, _1: 1}),
							_1: _elm_lang$core$Platform_Cmd$none
						};
					case 38:
						return {
							ctor: '_Tuple2',
							_0: A3(
								_user$project$Update$maybeChangeDir,
								g,
								1,
								{ctor: '_Tuple2', _0: -1, _1: 0}),
							_1: _elm_lang$core$Platform_Cmd$none
						};
					case 65:
						return {
							ctor: '_Tuple2',
							_0: A2(
								_user$project$Update$vshuman,
								g,
								A3(
									_user$project$Update$maybeChangeDir,
									g,
									2,
									{ctor: '_Tuple2', _0: 0, _1: -1})),
							_1: _elm_lang$core$Platform_Cmd$none
						};
					case 83:
						return {
							ctor: '_Tuple2',
							_0: A2(
								_user$project$Update$vshuman,
								g,
								A3(
									_user$project$Update$maybeChangeDir,
									g,
									2,
									{ctor: '_Tuple2', _0: 1, _1: 0})),
							_1: _elm_lang$core$Platform_Cmd$none
						};
					case 68:
						return {
							ctor: '_Tuple2',
							_0: A2(
								_user$project$Update$vshuman,
								g,
								A3(
									_user$project$Update$maybeChangeDir,
									g,
									2,
									{ctor: '_Tuple2', _0: 0, _1: 1})),
							_1: _elm_lang$core$Platform_Cmd$none
						};
					case 87:
						return {
							ctor: '_Tuple2',
							_0: A2(
								_user$project$Update$vshuman,
								g,
								A3(
									_user$project$Update$maybeChangeDir,
									g,
									2,
									{ctor: '_Tuple2', _0: -1, _1: 0})),
							_1: _elm_lang$core$Platform_Cmd$none
						};
					default:
						return {ctor: '_Tuple2', _0: g, _1: _elm_lang$core$Platform_Cmd$none};
				}
			default:
				return {ctor: '_Tuple2', _0: g, _1: _elm_lang$core$Platform_Cmd$none};
		}
	});
var _user$project$Update$update = F2(
	function (msg, model) {
		var _p4 = model;
		if (_p4.ctor === 'Menu') {
			var _p6 = _p4._0;
			var _p5 = msg;
			switch (_p5.ctor) {
				case 'StartingGameVsHuman':
					return {
						ctor: '_Tuple2',
						_0: _user$project$Model$InGame(
							A2(_user$project$Model$initState, _p6, false)),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				case 'StartingGameVsCPU':
					return {
						ctor: '_Tuple2',
						_0: _user$project$Model$InGame(
							A2(_user$project$Model$initState, _p6, true)),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				case 'Tick':
					return {
						ctor: '_Tuple2',
						_0: _user$project$Model$Menu(
							_elm_lang$core$Basics$round(_p5._0)),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				default:
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			}
		} else {
			var _p7 = A2(_user$project$Update$inGameAction, msg, _p4._0);
			var ng = _p7._0;
			var cmd = _p7._1;
			return {
				ctor: '_Tuple2',
				_0: _user$project$Model$InGame(
					A2(
						_user$project$Update$vscpu,
						ng,
						_user$project$CPU$cpuAction(ng))),
				_1: cmd
			};
		}
	});
